{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction RegistratiComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Le password non corrispondono. \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"btn-secondary\": a0,\n    \"btn-primary\": a1\n  };\n};\nexport class RegistratiComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.registrazioneForm = this.formBuilder.group({\n      codiceFiscale: ['', [Validators.required]],\n      mail: ['', [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$')]],\n      password: ['', [Validators.required, Validators.minLength(8)]],\n      confermaPassword: ['', [Validators.required, this.passwordMatchValidator]],\n      cognome: ['', [Validators.required, Validators.minLength(2)]],\n      nome: ['', [Validators.required, Validators.minLength(2)]],\n      indirizzo: ['', [Validators.required, Validators.minLength(2)]]\n    });\n  }\n  ngOnInit() {}\n  passwordMatchValidator(control) {\n    const password = control.get('password');\n    const confermaPassword = control.get('confermaPassword');\n    if (!password || !confermaPassword) {\n      return null;\n    }\n    return password.value === confermaPassword.value ? null : {\n      'mismatch': true\n    };\n  }\n  inviaDatiRegistrazione() {\n    fetch('http://localhost:1337/registrati', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: JSON.stringify(this.registrazioneForm.value)\n    }).then(response => response.json()).then(json => {\n      console.log('Data sent successfully:', json);\n      // Puoi anche chiamare fetchData() qui per aggiornare i dati dopo l'invio\n    }).catch(err => console.error(\"Request failed: \", err));\n  }\n  logFormState() {\n    console.log(this.registrazioneForm.value);\n  }\n  static #_ = this.ɵfac = function RegistratiComponent_Factory(t) {\n    return new (t || RegistratiComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegistratiComponent,\n    selectors: [[\"registrati\"]],\n    decls: 36,\n    vars: 7,\n    consts: [[1, \"princ\"], [3, \"formGroup\", \"ngSubmit\"], [2, \"width\", \"300px\", \"height\", \"600px\", \"border\", \"1px solid black\", \"display\", \"flex\", \"flex-direction\", \"column\", \"align-items\", \"center\", \"justify-content\", \"center\", \"border-radius\", \"30px\"], [1, \"form-group\"], [\"for\", \"codiceFiscale\"], [\"type\", \"text\", \"id\", \"codiceFiscale\", \"formControlName\", \"codiceFiscale\", 1, \"form-control\"], [\"for\", \"mail\"], [\"type\", \"email\", \"id\", \"mail\", \"formControlName\", \"mail\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"for\", \"confermaPassword\"], [\"type\", \"password\", \"id\", \"confermaPassword\", \"formControlName\", \"confermaPassword\", 1, \"form-control\"], [4, \"ngIf\"], [\"for\", \"cognome\"], [\"type\", \"text\", \"id\", \"cognome\", \"formControlName\", \"cognome\", 1, \"form-control\"], [\"for\", \"nome\"], [\"type\", \"text\", \"id\", \"nome\", \"formControlName\", \"nome\", 1, \"form-control\"], [\"for\", \"indirizzo\"], [\"type\", \"text\", \"id\", \"indirizzo\", \"formControlName\", \"indirizzo\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mt-3\", \"mb-3\", 2, \"width\", \"240px\", \"border-radius\", \"20px\", 3, \"ngClass\", \"disabled\"]],\n    template: function RegistratiComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function RegistratiComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.inviaDatiRegistrazione();\n        });\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"h1\");\n        i0.ɵɵtext(4, \"REGISTRATI\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Codice Fiscale\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 6);\n        i0.ɵɵtext(11, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 3)(14, \"label\", 8);\n        i0.ɵɵtext(15, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 3)(18, \"label\", 10);\n        i0.ɵɵtext(19, \"Conferma Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 11);\n        i0.ɵɵtemplate(21, RegistratiComponent_div_21_Template, 2, 0, \"div\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 3)(23, \"label\", 13);\n        i0.ɵɵtext(24, \"Cognome\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 3)(27, \"label\", 15);\n        i0.ɵɵtext(28, \"Nome\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"input\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\", 3)(31, \"label\", 17);\n        i0.ɵɵtext(32, \"Indirizzo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"input\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"button\", 19);\n        i0.ɵɵtext(35, \"Registrati\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.registrazioneForm);\n        i0.ɵɵadvance(20);\n        i0.ɵɵproperty(\"ngIf\", ctx.registrazioneForm.hasError(\"mismatch\", \"confermaPassword\"));\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(4, _c0, ctx.registrazioneForm.invalid, ctx.registrazioneForm.valid))(\"disabled\", ctx.registrazioneForm.invalid);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".princ[_ngcontent-%COMP%]{\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  padding-top: 25vh;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVnaXN0cmF0aS9yZWdpc3RyYXRpLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLHVCQUF1QjtFQUN2QixpQkFBaUI7QUFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyIucHJpbmN7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIHBhZGRpbmctdG9wOiAyNXZoO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","RegistratiComponent","constructor","formBuilder","registrazioneForm","group","codiceFiscale","required","mail","pattern","password","minLength","confermaPassword","passwordMatchValidator","cognome","nome","indirizzo","ngOnInit","control","get","value","inviaDatiRegistrazione","fetch","method","headers","body","JSON","stringify","then","response","json","console","log","catch","err","error","logFormState","_","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","decls","vars","consts","template","RegistratiComponent_Template","rf","ctx","ɵɵlistener","RegistratiComponent_Template_form_ngSubmit_1_listener","ɵɵelement","ɵɵtemplate","RegistratiComponent_div_21_Template","ɵɵadvance","ɵɵproperty","hasError","ɵɵpureFunction2","_c0","invalid","valid"],"sources":["C:\\Users\\Leke\\OneDrive\\Desktop\\ANGULAR\\ESAUTO\\EsAuto\\src\\app\\registrati\\registrati.component.ts","C:\\Users\\Leke\\OneDrive\\Desktop\\ANGULAR\\ESAUTO\\EsAuto\\src\\app\\registrati\\registrati.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'registrati',\r\n  templateUrl: './registrati.component.html',\r\n  styleUrls: ['./registrati.component.css']\r\n})\r\nexport class RegistratiComponent implements OnInit{\r\n  registrazioneForm: FormGroup;\r\n\r\n  constructor(private formBuilder: FormBuilder) {\r\n    this.registrazioneForm = this.formBuilder.group({\r\n      codiceFiscale: ['', [Validators.required]],\r\n      mail: ['', [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$')]],\r\n      password: ['', [Validators.required, Validators.minLength(8)]],\r\n      confermaPassword: ['', [Validators.required, this.passwordMatchValidator]],\r\n      cognome: ['', [Validators.required, Validators.minLength(2)]],\r\n      nome: ['', [Validators.required, Validators.minLength(2)]],\r\n      indirizzo: ['', [Validators.required, Validators.minLength(2)]]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  passwordMatchValidator(control: AbstractControl): { [key: string]: boolean } | null {\r\n    const password = control.get('password');\r\n    const confermaPassword = control.get('confermaPassword');\r\n\r\n    if (!password || !confermaPassword) {\r\n      return null;\r\n    }\r\n\r\n    return password.value === confermaPassword.value ? null : { 'mismatch': true };\r\n  }\r\n\r\n  inviaDatiRegistrazione() {\r\n\r\n\r\n      fetch('http://localhost:1337/registrati', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: JSON.stringify(this.registrazioneForm.value),\r\n      })\r\n          .then(response => response.json())\r\n          .then(json => {\r\n            console.log('Data sent successfully:', json);\r\n            // Puoi anche chiamare fetchData() qui per aggiornare i dati dopo l'invio\r\n          })\r\n          .catch(err => console.error(\"Request failed: \", err));\r\n  }\r\n  logFormState() {\r\n    console.log(this.registrazioneForm.value );\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"princ\">\r\n<form [formGroup]=\"registrazioneForm\" (ngSubmit)=\"inviaDatiRegistrazione()\">\r\n  <div style=\"width: 300px; height: 600px; border: 1px solid black; display: flex; flex-direction: column; align-items: center; justify-content: center;border-radius: 30px\">\r\n\r\n  <h1>REGISTRATI</h1>\r\n  <!-- Codice Fiscale -->\r\n  <div class=\"form-group\">\r\n    <label for=\"codiceFiscale\">Codice Fiscale</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"codiceFiscale\" formControlName=\"codiceFiscale\">\r\n  </div>\r\n\r\n  <!-- Email -->\r\n  <div class=\"form-group\">\r\n    <label for=\"mail\">Email</label>\r\n    <input type=\"email\" class=\"form-control\" id=\"mail\" formControlName=\"mail\">\r\n  </div>\r\n\r\n  <!-- Password -->\r\n  <div class=\"form-group\">\r\n    <label for=\"password\">Password</label>\r\n    <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\">\r\n  </div>\r\n\r\n  <!-- Conferma Password -->\r\n  <div class=\"form-group\">\r\n    <label for=\"confermaPassword\">Conferma Password</label>\r\n    <input type=\"password\" class=\"form-control\" id=\"confermaPassword\" formControlName=\"confermaPassword\">\r\n    <div *ngIf=\"registrazioneForm.hasError('mismatch', 'confermaPassword')\">\r\n      Le password non corrispondono.\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Cognome -->\r\n  <div class=\"form-group\">\r\n    <label for=\"cognome\">Cognome</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"cognome\" formControlName=\"cognome\">\r\n  </div>\r\n\r\n  <!-- Nome -->\r\n  <div class=\"form-group\">\r\n    <label for=\"nome\">Nome</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"nome\" formControlName=\"nome\">\r\n  </div>\r\n\r\n  <!-- Indirizzo -->\r\n  <div class=\"form-group\">\r\n    <label for=\"indirizzo\">Indirizzo</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"indirizzo\" formControlName=\"indirizzo\">\r\n  </div>\r\n\r\n  <button style=\"width: 240px; border-radius: 20px;\" type=\"submit\" class=\"btn btn-primary  mt-3 mb-3\" [ngClass]=\"{'btn-secondary': registrazioneForm.invalid,'btn-primary':registrazioneForm.valid}\" [disabled]=\"registrazioneForm.invalid\" >Registrati</button>\r\n  </div>\r\n</form>\r\n\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}